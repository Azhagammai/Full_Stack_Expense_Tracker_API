version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: expense_tracker_mongodb_prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - expense_tracker_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Expense Tracker API
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: expense_tracker_api_prod
    restart: always
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/expense_tracker?authSource=admin
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FLASK_ENV=production
    depends_on:
      - mongodb
    networks:
      - expense_tracker_network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: expense_tracker_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - expense_tracker_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  mongodb_data:
    driver: local

networks:
  expense_tracker_network:
    driver: bridge
